#!/bin/sh

# pegboard

fancy_echo() {
  local fmt="$1"; shift

  printf "\n$fmt\n" "$@"
}

append_to_shell_conf() {
  local text="$1" conf_path
  local skip_new_line="${2:-0}"

  if [[ $SHELL == *"zsh"* ]]; then
    conf_path="$HOME/.zshrc"
  elif [[ $SHELL == *"bash"* ]]; then
    conf_path="$HOME/.bash_profile"
  else
    echo "Only bash and zsh are supported by pegboard right now. Pegboard was unable to determine that you're using one of these shells. You'll need to manually add configuration to your shell's conf file."
    return
  fi

  if ! grep -Fqs "$text" "$conf_path"; then
    echo "Appending to $conf_path"
    if [ "$skip_new_line" -eq 1 ]; then
      printf "%s\n" "$text" >> "$conf_path"
    else
      printf "\n%s\n" "$text" >> "$conf_path"
    fi
  else
    echo "Skipping append to $conf_path, text already exists"
  fi
}

set -e

fancy_echo "Creating ~/.bin..."
if [ ! -d "$HOME/.bin/" ]; then
  mkdir "$HOME/.bin"
fi

fancy_echo "Setting up /usr/local for Homebrew..."
HOMEBREW_PREFIX="/usr/local"

if [ -d "$HOMEBREW_PREFIX" ]; then
  if ! [ -r "$HOMEBREW_PREFIX" ]; then
    sudo chown -R "$LOGNAME:admin" /usr/local
  fi
else
  sudo mkdir "$HOMEBREW_PREFIX"
  sudo chflags norestricted "$HOMEBREW_PREFIX"
  sudo chown -R "$LOGNAME:admin" "$HOMEBREW_PREFIX"
fi

gem_install_or_update() {
  echo "Adding gem $1"
  if gem list "$1" --installed > /dev/null; then
    gem update "$@"
  else
    gem install "$@"
    rbenv rehash
  fi
}

if ! command -v brew >/dev/null; then
  fancy_echo "Installing Homebrew ..."
    curl -fsS \
      'https://raw.githubusercontent.com/Homebrew/install/master/install' | ruby

    append_to_shell_conf '# recommended by brew doctor'
    append_to_shell_conf 'export PATH="/usr/local/bin:$PATH"' 1

    export PATH="/usr/local/bin:$PATH"
fi

if brew list | grep -Fq brew-cask; then
  fancy_echo "Uninstalling old Homebrew-Cask ..."
  brew uninstall --force brew-cask
fi

fancy_echo "Updating Homebrew formulae ..."
brew update
brew bundle --file=- <<EOF
# Base
brew "git"
brew "openssl"
brew "rbenv"
brew "ruby-build"
brew "git-lfs"
EOF

git-lfs install

fancy_echo "Configuring Ruby ..."
find_latest_ruby() {
  rbenv install -l | grep -v - | tail -1 | sed -e 's/^ *//'
}

ruby_version="$(find_latest_ruby)"
append_to_shell_conf 'eval "$(rbenv init -)"' 1
eval "$(rbenv init -)"

if ! rbenv versions | grep -Fq "$ruby_version"; then
  RUBY_CONFIGURE_OPTS=--with-openssl-dir=/usr/local/opt/openssl rbenv install -s "$ruby_version"
fi

rbenv global "$ruby_version"
rbenv shell "$ruby_version"
gem update --system
gem_install_or_update 'rbenv-rehash'
gem_install_or_update 'bundler'
number_of_cores=$(sysctl -n hw.ncpu)
bundle config --global jobs $((number_of_cores - 1))

for peg in "$@"
do
    fancy_echo "Adding peg $peg..."
    if [ -f "$PWD/pegs/$peg" ]; then
        . "$PWD/pegs/$peg"
    else
        echo "pegs/$peg not found"
    fi
done

if [ -f "$HOME/.peg.local" ]; then
  fancy_echo "Adding your ~/.peg.local peg..."
  . "$HOME/.peg.local"
fi

